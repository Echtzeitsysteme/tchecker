# This file is a part of the TChecker project.
#
# See files AUTHORS and LICENSE for copyright details.

# A model is a list of declarations. Objects must be declared before they are 
# used. For instance, the source and target locations of an edge must be
# declared before the edge. Please, notice that all declarations are in the 
# global scope. The model must start with a system declaration.
# 
# system:name
# clock:size:name
# int:size:min:max:init:name
# process:name
# event:name
# location:process:name
# edge:process:source:target:event
# sync:events
#   where events is a colon-separated list of process@event, for instance:
#   P1@a:P2@b:P3@c
#
# Each declaration can be appended a list of attributes between braces, for 
# instance: { initial: : invariant: x<1 }
# Each attribute is a pair "key: value" and attributes are separated by 
# columns. It is syntactically valid to omit the values (as for
# attribute "initial" above), but some keys may require a value (for instance,
# attribute "invariant").
#
# Please, refer to TChecker wiki for a detailed documentation of the input 
# language

system:ad94_fig10

clock:1:x
clock:1:y

event:a
event:b
event:c
event:d

process:P
location:P:l0{initial:}
location:P:l1{}
location:P:l2{}
location:P:l3{labels: green}
edge:P:l0:l1:a{do:y=0}
edge:P:l1:l2:b{provided: y==1}
edge:P:l1:l3:c{provided: x<1}
edge:P:l2:l3:c{provided: x<1}
edge:P:l3:l1:a{provided: y<1 : do:y=0}
edge:P:l3:l3:d{provided: x>1}
