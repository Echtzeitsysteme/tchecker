// REACHABLE false
// RUNNING_TIME_SECONDS  xxxx
// VISITED_STATES 56
digraph train_gate_2 {
  55 [intval="buffer[0]=1,buffer[1]=1,head=0,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  0 [intval="buffer[0]=1,buffer[1]=1,head=1,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  29 [intval="buffer[0]=1,buffer[1]=2,head=0,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  36 [intval="buffer[0]=1,buffer[1]=2,head=1,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  7 [intval="buffer[0]=2,buffer[1]=1,head=0,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  49 [intval="buffer[0]=2,buffer[1]=1,head=1,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  43 [intval="buffer[0]=2,buffer[1]=2,head=0,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  39 [intval="buffer[0]=2,buffer[1]=2,head=1,length=0", vloc="<Free,Safe,Safe>", zone="(0<=x1 & 0<=x2)"]
  33 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Free,Safe,Stop>", zone="(0<=x1 & 0<=x2)"]
  16 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Free,Safe,Stop>", zone="(0<=x1 & 0<=x2)"]
  26 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Free,Stop,Safe>", zone="(0<=x1 & 0<=x2)"]
  11 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Free,Stop,Safe>", zone="(0<=x1 & 0<=x2)"]
  21 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Appr>", zone="(0<=x1 & 0<=x2)"]
  53 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Appr>", zone="(0<=x1 & 0<=x2)"]
  41 [intval="buffer[0]=2,buffer[1]=2,head=0,length=1", vloc="<Occ,Safe,Appr>", zone="(0<=x1 & 0<=x2)"]
  47 [intval="buffer[0]=2,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Appr>", zone="(0<=x1 & 0<=x2)"]
  32 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Start>", zone="(0<=x1 & 0<=x2)"]
  15 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Start>", zone="(0<=x1 & 0<=x2)"]
  30 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Cross>", zone="(0<=x1 & 0<=x2)"]
  51 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Cross>", zone="(0<=x1 & 0<=x2)"]
  40 [intval="buffer[0]=2,buffer[1]=2,head=0,length=1", vloc="<Occ,Safe,Cross>", zone="(0<=x1 & 0<=x2)"]
  45 [intval="buffer[0]=2,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Cross>", zone="(0<=x1 & 0<=x2)"]
  54 [intval="buffer[0]=1,buffer[1]=1,head=0,length=1", vloc="<Occ,Appr,Safe>", zone="(0<=x1 & 0<=x2)"]
  22 [intval="buffer[0]=1,buffer[1]=1,head=1,length=1", vloc="<Occ,Appr,Safe>", zone="(0<=x1 & 0<=x2)"]
  42 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Appr,Safe>", zone="(0<=x1 & 0<=x2)"]
  48 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Appr,Safe>", zone="(0<=x1 & 0<=x2)"]
  4 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Appr,Stop>", zone="(0<=x1 & 0<=x2)"]
  5 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Appr,Stop>", zone="(0<=x1 & 0<=x2)"]
  3 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Appr>", zone="(0<=x1 & 0<=x2)"]
  2 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Appr>", zone="(0<=x1 & 0<=x2)"]
  28 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Start>", zone="(0<=x1 & 0<=x2)"]
  13 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Start>", zone="(0<=x1 & 0<=x2)"]
  27 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Cross>", zone="(0<=x1 & 0<=x2)"]
  12 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Cross>", zone="(0<=x1 & 0<=x2)"]
  25 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Start,Safe>", zone="(0<=x1 & 0<=x2)"]
  10 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Start,Safe>", zone="(0<=x1 & 0<=x2)"]
  23 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Start,Stop>", zone="(0<=x1 & 0<=x2)"]
  6 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Start,Stop>", zone="(0<=x1 & 0<=x2)"]
  1 [intval="buffer[0]=1,buffer[1]=1,head=0,length=1", vloc="<Occ,Cross,Safe>", zone="(0<=x1 & 0<=x2)"]
  19 [intval="buffer[0]=1,buffer[1]=1,head=1,length=1", vloc="<Occ,Cross,Safe>", zone="(0<=x1 & 0<=x2)"]
  37 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Cross,Safe>", zone="(0<=x1 & 0<=x2)"]
  8 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Cross,Safe>", zone="(0<=x1 & 0<=x2)"]
  34 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Cross,Stop>", zone="(0<=x1 & 0<=x2)"]
  17 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Cross,Stop>", zone="(0<=x1 & 0<=x2)"]
  38 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Appr,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  46 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Appr>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  52 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Appr>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  20 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Appr,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  31 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Start>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  14 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Start>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  44 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Cross>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  50 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Cross>", zone="(x1=0 & 0<=x2 & x1-x2<=0)"]
  24 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Start,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  9 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Start,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  35 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Cross,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  18 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Cross,Appr>", zone="(0<=x1 & x2=0 & 0<=x1-x2)"]
  11 -> 10 [vedge="<Gate@go1,Train1@go>"]
  26 -> 25 [vedge="<Gate@go1,Train1@go>"]
  0 -> 22 [vedge="<Gate@appr1,Train1@appr>"]
  7 -> 54 [vedge="<Gate@appr1,Train1@appr>"]
  29 -> 42 [vedge="<Gate@appr1,Train1@appr>"]
  36 -> 22 [vedge="<Gate@appr1,Train1@appr>"]
  39 -> 48 [vedge="<Gate@appr1,Train1@appr>"]
  43 -> 42 [vedge="<Gate@appr1,Train1@appr>"]
  49 -> 48 [vedge="<Gate@appr1,Train1@appr>"]
  55 -> 54 [vedge="<Gate@appr1,Train1@appr>"]
  15 -> 14 [vedge="<Gate@appr1,Train1@appr>"]
  21 -> 46 [vedge="<Gate@appr1,Train1@appr>"]
  30 -> 44 [vedge="<Gate@appr1,Train1@appr>"]
  32 -> 31 [vedge="<Gate@appr1,Train1@appr>"]
  40 -> 50 [vedge="<Gate@appr1,Train1@appr>"]
  41 -> 52 [vedge="<Gate@appr1,Train1@appr>"]
  45 -> 44 [vedge="<Gate@appr1,Train1@appr>"]
  47 -> 46 [vedge="<Gate@appr1,Train1@appr>"]
  51 -> 50 [vedge="<Gate@appr1,Train1@appr>"]
  53 -> 52 [vedge="<Gate@appr1,Train1@appr>"]
  1 -> 0 [vedge="<Gate@leave1,Train1@leave>"]
  8 -> 7 [vedge="<Gate@leave1,Train1@leave>"]
  17 -> 16 [vedge="<Gate@leave1,Train1@leave>"]
  19 -> 55 [vedge="<Gate@leave1,Train1@leave>"]
  34 -> 33 [vedge="<Gate@leave1,Train1@leave>"]
  37 -> 36 [vedge="<Gate@leave1,Train1@leave>"]
  14 -> 13 [vedge="<Gate@stop1,Train1@stop>"]
  31 -> 28 [vedge="<Gate@stop1,Train1@stop>"]
  44 -> 27 [vedge="<Gate@stop1,Train1@stop>"]
  46 -> 3 [vedge="<Gate@stop1,Train1@stop>"]
  50 -> 12 [vedge="<Gate@stop1,Train1@stop>"]
  52 -> 2 [vedge="<Gate@stop1,Train1@stop>"]
  16 -> 15 [vedge="<Gate@go2,Train2@go>"]
  33 -> 32 [vedge="<Gate@go2,Train2@go>"]
  0 -> 21 [vedge="<Gate@appr2,Train2@appr>"]
  7 -> 53 [vedge="<Gate@appr2,Train2@appr>"]
  29 -> 41 [vedge="<Gate@appr2,Train2@appr>"]
  36 -> 21 [vedge="<Gate@appr2,Train2@appr>"]
  39 -> 47 [vedge="<Gate@appr2,Train2@appr>"]
  43 -> 41 [vedge="<Gate@appr2,Train2@appr>"]
  49 -> 47 [vedge="<Gate@appr2,Train2@appr>"]
  55 -> 53 [vedge="<Gate@appr2,Train2@appr>"]
  1 -> 35 [vedge="<Gate@appr2,Train2@appr>"]
  8 -> 18 [vedge="<Gate@appr2,Train2@appr>"]
  10 -> 9 [vedge="<Gate@appr2,Train2@appr>"]
  19 -> 18 [vedge="<Gate@appr2,Train2@appr>"]
  22 -> 20 [vedge="<Gate@appr2,Train2@appr>"]
  25 -> 24 [vedge="<Gate@appr2,Train2@appr>"]
  37 -> 35 [vedge="<Gate@appr2,Train2@appr>"]
  42 -> 38 [vedge="<Gate@appr2,Train2@appr>"]
  48 -> 20 [vedge="<Gate@appr2,Train2@appr>"]
  54 -> 38 [vedge="<Gate@appr2,Train2@appr>"]
  12 -> 11 [vedge="<Gate@leave2,Train2@leave>"]
  27 -> 26 [vedge="<Gate@leave2,Train2@leave>"]
  30 -> 29 [vedge="<Gate@leave2,Train2@leave>"]
  40 -> 39 [vedge="<Gate@leave2,Train2@leave>"]
  45 -> 43 [vedge="<Gate@leave2,Train2@leave>"]
  51 -> 49 [vedge="<Gate@leave2,Train2@leave>"]
  9 -> 6 [vedge="<Gate@stop2,Train2@stop>"]
  18 -> 17 [vedge="<Gate@stop2,Train2@stop>"]
  20 -> 5 [vedge="<Gate@stop2,Train2@stop>"]
  24 -> 23 [vedge="<Gate@stop2,Train2@stop>"]
  35 -> 34 [vedge="<Gate@stop2,Train2@stop>"]
  38 -> 4 [vedge="<Gate@stop2,Train2@stop>"]
  4 -> 34 [vedge="<Train1@tau>"]
  5 -> 17 [vedge="<Train1@tau>"]
  22 -> 19 [vedge="<Train1@tau>"]
  42 -> 37 [vedge="<Train1@tau>"]
  48 -> 8 [vedge="<Train1@tau>"]
  54 -> 1 [vedge="<Train1@tau>"]
  6 -> 17 [vedge="<Train1@tau>"]
  10 -> 8 [vedge="<Train1@tau>"]
  23 -> 34 [vedge="<Train1@tau>"]
  25 -> 37 [vedge="<Train1@tau>"]
  2 -> 12 [vedge="<Train2@tau>"]
  3 -> 27 [vedge="<Train2@tau>"]
  21 -> 30 [vedge="<Train2@tau>"]
  41 -> 40 [vedge="<Train2@tau>"]
  47 -> 45 [vedge="<Train2@tau>"]
  53 -> 51 [vedge="<Train2@tau>"]
  13 -> 12 [vedge="<Train2@tau>"]
  15 -> 51 [vedge="<Train2@tau>"]
  28 -> 27 [vedge="<Train2@tau>"]
  32 -> 30 [vedge="<Train2@tau>"]
}
