// COVERED_STATES 29
// REACHABLE false
// RUNNING_TIME_SECONDS  xxxx
// STORED_STATES 56
// VISITED_STATES 56
digraph train_gate_2 {
  4 [intval="buffer[0]=1,buffer[1]=1,head=0,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=0 & $0-$x2<=0 & $1-$x1<=0 & $1-$x2<=0 & $2-$x1<=0 & $2-$x2<=0 & $x1=$x2)"]
  3 [intval="buffer[0]=1,buffer[1]=1,head=1,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-3 & $0-$x2<=-13 & $1-$x1<=-3 & $1-$x2<=-13 & $2-$x2<=0 & $x1-$x2<=-10)"]
  1 [intval="buffer[0]=1,buffer[1]=2,head=0,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-13 & $0-$x2<=-3 & $1-$x1<=-3 & $2-$x1<=-13 & $2-$x2<=-3 & 10<=$x1-$x2)"]
  0 [intval="buffer[0]=1,buffer[1]=2,head=1,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-3 & $0-$x2<=-16 & $1-$x1<=-3 & $1-$x2<=-16 & $2-$x2<=-3 & $x1-$x2<=-13)"]
  5 [intval="buffer[0]=2,buffer[1]=1,head=0,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-3 & $0-$x2<=-13 & $1-$x1<=-3 & $1-$x2<=-13 & $2-$x2<=-3 & $x1-$x2<=-10)"]
  6 [intval="buffer[0]=2,buffer[1]=1,head=1,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-13 & $0-$x2<=-3 & $1-$x1<=0 & $2-$x1<=-13 & $2-$x2<=-3 & 10<=$x1-$x2)"]
  29 [intval="buffer[0]=2,buffer[1]=2,head=0,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-26 & $0-$x2<=-3 & $1-$x1<=0 & $2-$x1<=-26 & $2-$x2<=-3 & 23<=$x1-$x2)"]
  28 [intval="buffer[0]=2,buffer[1]=2,head=1,length=0", vloc="<Free,Safe,Safe>", zone="($0-$x1<=-39 & $0-$x2<=-3 & $1-$x1<=0 & $2-$x1<=-39 & $2-$x2<=-3 & 36<=$x1-$x2)"]
  2 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Free,Safe,Stop>", zone="($0-$x1<=-3 & $0-$x2<=0 & $1-$x1<=-3 & $1-$x2<=0 & $2-$x1<=20 & $2-$x2<=0 & -20<=$x1-$x2<=5)"]
  7 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Free,Safe,Stop>", zone="($0-$x1<=-3 & $0-$x2<=0 & $1-$x1<=-3 & $1-$x2<=0 & $2-$x1<=20 & $2-$x2<=0 & -20<=$x1-$x2<=5)"]
  27 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Free,Stop,Safe>", zone="($0-$x1<=0 & $0-$x2<=-3 & $1-$x1<=0 & $1-$x2<=15 & $2-$x1<=0 & $2-$x2<=-3 & -5<=$x1-$x2<=15)"]
  10 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Free,Stop,Safe>", zone="($0-$x1<=0 & $0-$x2<=-3 & $1-$x1<=0 & $1-$x2<=15 & $2-$x1<=0 & $2-$x2<=-3 & -5<=$x1-$x2<=15)"]
  46 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Appr>", zone="($0-$2<=20 & $0-$x1<=-3 & $0-$x2<=0 & $1-$x1<=-3 & $2-$x1<=-3 & -20<=$2-$x2<=0 & 3<=$x1-$x2)"]
  55 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Appr>", zone="($0-$2<=20 & $0-$x1<=0 & $0-$x2<=0 & $1-$x1<=0 & $2-$x1<=0 & -20<=$2-$x2<=0 & 0<=$x1-$x2)"]
  15 [intval="buffer[0]=2,buffer[1]=2,head=0,length=1", vloc="<Occ,Safe,Appr>", zone="($0-$2<=20 & $0-$x1<=-26 & $0-$x2<=0 & $1-$x1<=0 & $2-$x1<=-26 & -20<=$2-$x2<=0 & 26<=$x1-$x2)"]
  14 [intval="buffer[0]=2,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Appr>", zone="($0-$2<=20 & $0-$x1<=-13 & $0-$x2<=0 & $1-$x1<=0 & $2-$x1<=-13 & -20<=$2-$x2<=0 & 13<=$x1-$x2)"]
  45 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Start>", zone="($0-$2<=15 & $0-$x1<=-3 & $0-$x2<=0 & $1-$x1<=-3 & $2-$x1<=-3 & -15<=$2-$x2<=0 & 3<=$x1-$x2)"]
  54 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Start>", zone="($0-$2<=15 & $0-$x1<=-3 & $0-$x2<=0 & $1-$x1<=-3 & $2-$x1<=-3 & -15<=$2-$x2<=0 & 3<=$x1-$x2)"]
  44 [intval="buffer[0]=1,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Cross>", zone="($0-$2<=20 & $0-$x1<=-3 & $0-$x2<=15 & $1-$x1<=-3 & $2-$x1<=-10 & -5<=$2-$x2<=0 & 10<=$x1-$x2)"]
  53 [intval="buffer[0]=2,buffer[1]=1,head=0,length=1", vloc="<Occ,Safe,Cross>", zone="($0-$2<=25 & $0-$x1<=0 & $0-$x2<=20 & $1-$x1<=0 & $2-$x1<=-10 & -5<=$2-$x2<=0 & 10<=$x1-$x2)"]
  16 [intval="buffer[0]=2,buffer[1]=2,head=0,length=1", vloc="<Occ,Safe,Cross>", zone="($0-$2<=25 & $0-$x1<=-26 & $0-$x2<=20 & $1-$x1<=0 & $2-$x1<=-36 & -5<=$2-$x2<=0 & 36<=$x1-$x2)"]
  17 [intval="buffer[0]=2,buffer[1]=2,head=1,length=1", vloc="<Occ,Safe,Cross>", zone="($0-$2<=25 & $0-$x1<=-13 & $0-$x2<=20 & $1-$x1<=0 & $2-$x1<=-23 & -5<=$2-$x2<=0 & 23<=$x1-$x2)"]
  51 [intval="buffer[0]=1,buffer[1]=1,head=0,length=1", vloc="<Occ,Appr,Safe>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=0 & -20<=$1-$x1<=0 & $1-$x2<=0 & $2-$x2<=0 & $x1-$x2<=0)"]
  52 [intval="buffer[0]=1,buffer[1]=1,head=1,length=1", vloc="<Occ,Appr,Safe>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=-16 & -20<=$1-$x1<=0 & $1-$x2<=-16 & $2-$x2<=-3 & $x1-$x2<=-16)"]
  40 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Appr,Safe>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=-3 & -20<=$1-$x1<=0 & $1-$x2<=-3 & $2-$x2<=-3 & $x1-$x2<=-3)"]
  48 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Appr,Safe>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=-3 & -20<=$1-$x1<=0 & $1-$x2<=-3 & $2-$x2<=-3 & $x1-$x2<=-3)"]
  41 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Appr,Stop>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=0 & -20<=$1-$2 & -20<=$1-$x1<=0 & -20<=$1-$x2 & $2-$x1<=0 & $2-$x2<=0 & 0<=$x1-$x2)"]
  49 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Appr,Stop>", zone="($0-$1<=20 & $0-$x1<=0 & $0-$x2<=0 & -20<=$1-$2 & -20<=$1-$x1<=0 & -20<=$1-$x2 & $2-$x1<=0 & $2-$x2<=0 & 0<=$x1-$x2)"]
  34 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Appr>", zone="($0-$2<=20 & $0-$x1<=0 & $0-$x2<=0 & $1-$2<=20 & $1-$x1<=0 & $1-$x2<=0 & -20<=$2-$x1 & -20<=$2-$x2<=0 & $x1-$x2<=0)"]
  12 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Appr>", zone="($0-$2<=20 & $0-$x1<=0 & $0-$x2<=0 & $1-$2<=20 & $1-$x1<=0 & $1-$x2<=0 & -20<=$2-$x1 & -20<=$2-$x2<=0 & $x1-$x2<=0)"]
  37 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Start>", zone="($0-$2<=15 & $0-$x1<=0 & $0-$x2<=0 & $1-$2<=15 & $1-$x1<=0 & $1-$x2<=0 & -15<=$2-$x1 & -15<=$2-$x2<=0 & $x1-$x2<=0)"]
  11 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Start>", zone="($0-$2<=15 & $0-$x1<=0 & $0-$x2<=0 & $1-$2<=15 & $1-$x1<=0 & $1-$x2<=0 & -15<=$2-$x1 & -15<=$2-$x2<=0 & $x1-$x2<=0)"]
  38 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Occ,Stop,Cross>", zone="($0-$2<=20 & $0-$x1<=0 & $0-$x2<=15 & $1-$2<=20 & $1-$x1<=0 & $1-$x2<=15 & -20<=$2-$x1 & -5<=$2-$x2<=0 & $x1-$x2<=15)"]
  13 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Occ,Stop,Cross>", zone="($0-$2<=20 & $0-$x1<=0 & $0-$x2<=15 & $1-$2<=20 & $1-$x1<=0 & $1-$x2<=15 & -20<=$2-$x1 & -5<=$2-$x2<=0 & $x1-$x2<=15)"]
  9 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Start,Safe>", zone="($0-$1<=15 & $0-$x1<=0 & $0-$x2<=-3 & -15<=$1-$x1<=0 & $1-$x2<=-3 & $2-$x2<=-3 & $x1-$x2<=-3)"]
  43 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Start,Safe>", zone="($0-$1<=15 & $0-$x1<=0 & $0-$x2<=-3 & -15<=$1-$x1<=0 & $1-$x2<=-3 & $2-$x2<=-3 & $x1-$x2<=-3)"]
  8 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Start,Stop>", zone="($0-$1<=15 & $0-$x1<=0 & $0-$x2<=0 & -15<=$1-$2 & -15<=$1-$x1<=0 & -15<=$1-$x2 & $2-$x1<=0 & $2-$x2<=0 & 0<=$x1-$x2)"]
  42 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Start,Stop>", zone="($0-$1<=15 & $0-$x1<=0 & $0-$x2<=0 & -15<=$1-$2 & -15<=$1-$x1<=0 & -15<=$1-$x2 & $2-$x1<=0 & $2-$x2<=0 & 0<=$x1-$x2)"]
  19 [intval="buffer[0]=1,buffer[1]=1,head=0,length=1", vloc="<Occ,Cross,Safe>", zone="($0-$1<=25 & $0-$x1<=20 & $0-$x2<=0 & -5<=$1-$x1<=0 & $1-$x2<=-10 & $2-$x2<=0 & $x1-$x2<=-10)"]
  18 [intval="buffer[0]=1,buffer[1]=1,head=1,length=1", vloc="<Occ,Cross,Safe>", zone="($0-$1<=25 & $0-$x1<=20 & $0-$x2<=-16 & -5<=$1-$x1<=0 & $1-$x2<=-26 & $2-$x2<=-3 & $x1-$x2<=-26)"]
  26 [intval="buffer[0]=1,buffer[1]=2,head=0,length=1", vloc="<Occ,Cross,Safe>", zone="($0-$1<=25 & $0-$x1<=20 & $0-$x2<=-3 & -5<=$1-$x1<=0 & $1-$x2<=-13 & $2-$x2<=-3 & $x1-$x2<=-13)"]
  36 [intval="buffer[0]=2,buffer[1]=1,head=1,length=1", vloc="<Occ,Cross,Safe>", zone="($0-$1<=20 & $0-$x1<=15 & $0-$x2<=-3 & -5<=$1-$x1<=0 & $1-$x2<=-10 & $2-$x2<=-3 & $x1-$x2<=-10)"]
  25 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Occ,Cross,Stop>", zone="($0-$1<=25 & $0-$x1<=20 & $0-$x2<=0 & -25<=$1-$2 & -5<=$1-$x1<=0 & -25<=$1-$x2 & $2-$x1<=20 & $2-$x2<=0 & -20<=$x1-$x2)"]
  35 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Occ,Cross,Stop>", zone="($0-$1<=25 & $0-$x1<=20 & $0-$x2<=0 & -25<=$1-$2 & -5<=$1-$x1<=0 & -25<=$1-$x2 & $2-$x1<=20 & $2-$x2<=0 & -20<=$x1-$x2)"]
  31 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Appr,Appr>", zone="($0-$1<=20 & 0<=$0-$2<=20 & $0-$x1<=0 & $0=$x2 & -20<=$1-$2 & -20<=$1-$x1<=0 & -20<=$1-$x2 & $2-$x1<=0 & -20<=$2-$x2<=0 & 0<=$x1-$x2)"]
  32 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Appr>", zone="(0<=$0-$1<=20 & $0-$2<=20 & $0=$x1 & $0-$x2<=0 & $1-$2<=20 & -20<=$1-$x1<=0 & $1-$x2<=0 & -20<=$2-$x1 & -20<=$2-$x2<=0 & $x1-$x2<=0)"]
  22 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Appr>", zone="(0<=$0-$1<=20 & $0-$2<=20 & $0=$x1 & $0-$x2<=0 & $1-$2<=20 & -20<=$1-$x1<=0 & $1-$x2<=0 & -20<=$2-$x1 & -20<=$2-$x2<=0 & $x1-$x2<=0)"]
  23 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Appr,Appr>", zone="($0-$1<=20 & 0<=$0-$2<=20 & $0-$x1<=0 & $0=$x2 & -20<=$1-$2 & -20<=$1-$x1<=0 & -20<=$1-$x2 & $2-$x1<=0 & -20<=$2-$x2<=0 & 0<=$x1-$x2)"]
  33 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Start>", zone="(0<=$0-$1<=20 & $0-$2<=15 & $0=$x1 & $0-$x2<=0 & $1-$2<=15 & -20<=$1-$x1<=0 & $1-$x2<=0 & -15<=$2-$x1 & -15<=$2-$x2<=0 & $x1-$x2<=0)"]
  20 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Start>", zone="(0<=$0-$1<=20 & $0-$2<=15 & $0=$x1 & $0-$x2<=0 & $1-$2<=15 & -20<=$1-$x1<=0 & $1-$x2<=0 & -15<=$2-$x1 & -15<=$2-$x2<=0 & $x1-$x2<=0)"]
  30 [intval="buffer[0]=1,buffer[1]=2,head=1,length=2", vloc="<Transient,Appr,Cross>", zone="(0<=$0-$1<=20 & $0-$2<=25 & $0=$x1 & $0-$x2<=20 & $1-$2<=25 & -20<=$1-$x1<=0 & $1-$x2<=20 & -25<=$2-$x1 & -5<=$2-$x2<=0 & $x1-$x2<=20)"]
  21 [intval="buffer[0]=2,buffer[1]=1,head=0,length=2", vloc="<Transient,Appr,Cross>", zone="(0<=$0-$1<=20 & $0-$2<=25 & $0=$x1 & $0-$x2<=20 & $1-$2<=25 & -20<=$1-$x1<=0 & $1-$x2<=20 & -25<=$2-$x1 & -5<=$2-$x2<=0 & $x1-$x2<=20)"]
  24 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Start,Appr>", zone="($0-$1<=15 & 0<=$0-$2<=20 & $0-$x1<=0 & $0=$x2 & -15<=$1-$2 & -15<=$1-$x1<=0 & -15<=$1-$x2 & $2-$x1<=0 & -20<=$2-$x2<=0 & 0<=$x1-$x2)"]
  50 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Start,Appr>", zone="($0-$1<=15 & 0<=$0-$2<=20 & $0-$x1<=0 & $0=$x2 & -15<=$1-$2 & -15<=$1-$x1<=0 & -15<=$1-$x2 & $2-$x1<=0 & -20<=$2-$x2<=0 & 0<=$x1-$x2)"]
  47 [intval="buffer[0]=1,buffer[1]=2,head=0,length=2", vloc="<Transient,Cross,Appr>", zone="($0-$1<=25 & 0<=$0-$2<=20 & $0-$x1<=20 & $0=$x2 & -25<=$1-$2 & -5<=$1-$x1<=0 & -25<=$1-$x2 & $2-$x1<=20 & -20<=$2-$x2<=0 & -20<=$x1-$x2)"]
  39 [intval="buffer[0]=2,buffer[1]=1,head=1,length=2", vloc="<Transient,Cross,Appr>", zone="($0-$1<=25 & 0<=$0-$2<=20 & $0-$x1<=20 & $0=$x2 & -25<=$1-$2 & -5<=$1-$x1<=0 & -25<=$1-$x2 & $2-$x1<=20 & -20<=$2-$x2<=0 & -20<=$x1-$x2)"]
  10 -> 43 [edge_type="actual", vedge="<Gate@go1,Train1@go>"]
  27 -> 9 [edge_type="actual", vedge="<Gate@go1,Train1@go>"]
  0 -> 52 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  1 -> 40 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  3 -> 52 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  4 -> 51 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  5 -> 51 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  6 -> 48 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  28 -> 48 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  29 -> 40 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  14 -> 32 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  15 -> 22 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  16 -> 21 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  17 -> 30 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  44 -> 30 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  45 -> 33 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  46 -> 32 [edge_type="subsumption", vedge="<Gate@appr1,Train1@appr>"]
  53 -> 21 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  54 -> 20 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  55 -> 22 [edge_type="actual", vedge="<Gate@appr1,Train1@appr>"]
  18 -> 4 [edge_type="subsumption", vedge="<Gate@leave1,Train1@leave>"]
  19 -> 3 [edge_type="actual", vedge="<Gate@leave1,Train1@leave>"]
  25 -> 2 [edge_type="actual", vedge="<Gate@leave1,Train1@leave>"]
  26 -> 0 [edge_type="actual", vedge="<Gate@leave1,Train1@leave>"]
  35 -> 7 [edge_type="actual", vedge="<Gate@leave1,Train1@leave>"]
  36 -> 5 [edge_type="actual", vedge="<Gate@leave1,Train1@leave>"]
  20 -> 11 [edge_type="actual", vedge="<Gate@stop1,Train1@stop>"]
  21 -> 13 [edge_type="subsumption", vedge="<Gate@stop1,Train1@stop>"]
  22 -> 12 [edge_type="actual", vedge="<Gate@stop1,Train1@stop>"]
  30 -> 38 [edge_type="subsumption", vedge="<Gate@stop1,Train1@stop>"]
  32 -> 34 [edge_type="actual", vedge="<Gate@stop1,Train1@stop>"]
  33 -> 37 [edge_type="actual", vedge="<Gate@stop1,Train1@stop>"]
  2 -> 45 [edge_type="actual", vedge="<Gate@go2,Train2@go>"]
  7 -> 54 [edge_type="actual", vedge="<Gate@go2,Train2@go>"]
  0 -> 46 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  1 -> 15 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  3 -> 46 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  4 -> 55 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  5 -> 55 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  6 -> 14 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  28 -> 14 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  29 -> 15 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  9 -> 24 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  18 -> 39 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  19 -> 47 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  26 -> 47 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  36 -> 39 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  40 -> 31 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  43 -> 50 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  48 -> 23 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  51 -> 31 [edge_type="subsumption", vedge="<Gate@appr2,Train2@appr>"]
  52 -> 23 [edge_type="actual", vedge="<Gate@appr2,Train2@appr>"]
  13 -> 10 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  16 -> 28 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  17 -> 29 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  38 -> 27 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  44 -> 1 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  53 -> 6 [edge_type="actual", vedge="<Gate@leave2,Train2@leave>"]
  23 -> 49 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  24 -> 8 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  31 -> 41 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  39 -> 35 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  47 -> 25 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  50 -> 42 [edge_type="actual", vedge="<Gate@stop2,Train2@stop>"]
  40 -> 26 [edge_type="actual", vedge="<Train1@tau>"]
  41 -> 25 [edge_type="subsumption", vedge="<Train1@tau>"]
  48 -> 36 [edge_type="subsumption", vedge="<Train1@tau>"]
  49 -> 35 [edge_type="subsumption", vedge="<Train1@tau>"]
  51 -> 19 [edge_type="actual", vedge="<Train1@tau>"]
  52 -> 18 [edge_type="actual", vedge="<Train1@tau>"]
  8 -> 25 [edge_type="subsumption", vedge="<Train1@tau>"]
  9 -> 26 [edge_type="subsumption", vedge="<Train1@tau>"]
  42 -> 35 [edge_type="subsumption", vedge="<Train1@tau>"]
  43 -> 36 [edge_type="actual", vedge="<Train1@tau>"]
  12 -> 13 [edge_type="subsumption", vedge="<Train2@tau>"]
  14 -> 17 [edge_type="actual", vedge="<Train2@tau>"]
  15 -> 16 [edge_type="actual", vedge="<Train2@tau>"]
  34 -> 38 [edge_type="subsumption", vedge="<Train2@tau>"]
  46 -> 44 [edge_type="subsumption", vedge="<Train2@tau>"]
  55 -> 53 [edge_type="actual", vedge="<Train2@tau>"]
  11 -> 13 [edge_type="actual", vedge="<Train2@tau>"]
  37 -> 38 [edge_type="actual", vedge="<Train2@tau>"]
  45 -> 44 [edge_type="actual", vedge="<Train2@tau>"]
  54 -> 53 [edge_type="subsumption", vedge="<Train2@tau>"]
}
